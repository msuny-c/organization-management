name: Build & Promote JAR to Helios

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar_name: ${{ steps.vars.outputs.jar_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build JAR
        run: mvn -B clean package -DskipTests

      - name: Detect fat JAR
        id: vars
        run: |
          JAR=$(ls -1 target/*-SNAPSHOT.jar target/*.jar 2>/dev/null | head -n1)
          test -n "$JAR"
          echo "jar_name=$(basename "$JAR")" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/${{ steps.vars.outputs.jar_name }}

  promote:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: jar
          path: .

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_key
          chmod 600 ~/.ssh/id_key
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload JAR to server
        run: |
          scp -P "${{ secrets.SSH_PORT }}" -i ~/.ssh/id_key \
            ./*.jar \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/apps/organization-management/organization-management.jar"

      - name: Restart service on server
        run: |
            ssh -n -p "${{ secrets.SSH_PORT }}" -i ~/.ssh/id_key \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            "set -euo pipefail; cd ~/apps/organization-management && env SERVER_PORT=${{ secrets.SERVER_PORT }} ./appctl.sh restart"

      - name: Healthcheck
        run: |
            ssh -n -p "${{ secrets.SSH_PORT }}" -i ~/.ssh/id_key \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            'PORT=${SERVER_PORT}; for i in $(jot 60); do nc -z 127.0.0.1 "$PORT" && exit 0; sleep 1; done; echo "Port $PORT not open"; exit 1'